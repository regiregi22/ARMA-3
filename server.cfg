// GLOBAL SETTINGS
hostname = "My Arma Server";				// The name of the server that shall be displayed in the public server list.
password = "1234";							// Password for joining the server.
passwordAdmin = "12341234";					// Password to become server admin, type '#login password'.
serverCommandPassword = "5678";				// Password required by 'serverCommand' server-side scripting.
admins[] = { "" };							// Whitelisted clients 'UIDs' can use #login without password, to have admins and not provide them the password.
maxPlayers = 64;							// The maximum number of players that can connect to server.
loopback = false;							// True this forces server into LAN mode, allows multiple local instances of the game to connect to the server for testing purposes. 
upnp = false;								// Automatically creates port mapping on UPNP/IGD enabled router. This option allows to create a server behind NAT.


// MESSAGE OF THE DAY
motd[] = {
	"",										// It can be several lines, separated by comma.
	"Welcome to My Arma Server", 			// Empty messages "" will not be displayed at all but are only for increasing the interval.
	""										// Two lines welcome message. Comma is the 'new line' separator.
};
motdInterval = 2;							// Time interval (in seconds) between each message.


// LOGGING
logFile = "server_console.log";				// Enables output of dedicated server console into textfile. Default location of log is same as crash dumps and other logs.
timeStampFormat = "short";					// Set the timestamp format used on each report line in server-side RPT file. Possible values are "none", "short", "full".


// SECURITY
BattlEye = 1;								// If set to 1, BattlEye Anti-Cheat will be enabled on the server.
battleyeLicense = 1;						// The server needs this because you don't get the dialogue to accept the license contract.
verifySignatures = 2;						// Verifies the players files by checking them with the .bisign signatures. Works properly from 1.08 on
kickDuplicate = 1;							// Do not allow duplicate game IDs.
filePatchingExceptions[] = {};				// Whitelisted clients ignore the rules defined by "allowedFilePatching" and "verifySignatures", allowing join with any mods.
allowedFilePatching	= 0;					// Prevents clients with filePatching enabled from joining the server
											// (0 = block filePatching, 1 = allow headless clients, 2 = allow all).

// HEADLESS CLIENTS
headlessClients[]={"127.0.0.1","1.1.1.1"};	// Headless Client IPs. Multiple connections and addresses are allowed in case of multiple HC.
localClient[]={"127.0.0.1"};				// Indicates clients with unlimited bandwidth and nearly no latency.
											// Launch: arma3_x64.exe -client -connect=xxx.xxx.xxx.xxx -nosound -port=xxxx -password=yourpass -name=HC -profile=HC "-mod=xxx"
											// After creation, edit "HC.Arma3Profile" and add this line: battleyeLicense=1;.


// VOICE CHAT
disableVoN = 1;					// If set to 1, Voice over Net will not be available.
vonCodecQuality = 30;						// Quality from 1 to 30.
vonCodec = 1;								// Value 0 uses older SPEEX codec, while 1 switches to new IETF standard OPUS codec.


// INGAME SETTINGS
drawingInMap = true;						// Enables or disables the ability to place markers and draw lines in map.
persistent = 1;								// If 1, missions still run on even after the last player disconnected.
skipLobby = false;							// If true, joining player will skip role selection.
allowProfileGlasses = true;					// If false, glasses set in player profile will be ignored.
forceRotorLibSimulation = 0;				// Enforces the Advanced Flight Model on the server. 0 (up to the player). 1 - forced AFM, 2 - forced SFM.
statisticsEnabled = 1;						// Allows to opt-out of Arma 3 analytics for the server by using 0.
overrideHazeQuality = 0;					// 0/1/2 - VeryLow/Low/Standard - Forces haze quality in MP on all clients. 


// EVENT SETTINGS
DisconnectTimeout = 15;						// Server wait time before disconnecting client after loss of active traffic connection, range 1 to 90 seconds.
enablePlayerDiag = 0;						// Logs players' bandwidth and desync info every 60 seconds, as well as "network message is pending" owner identity.
doubleIdDetected = "";						// 2nd user with the same ID detected.
onUserConnected = "";						// User has connected.
onUserDisconnected = "";					// User has disconnected.
onHackedData = "";							// Modification of signed pbo detected.
onUnsignedData = "";						// Unsigned data detected.
onDifferentData = "";						// Signed pbo detected with a valid signature, but a different version than a server has.
onUserKicked = "";							// If a user is kicked.
regularCheck = "";							// Called time by time for each user, test index is growing.


// VOTING
voteMissionPlayers = 1;  					// Tells the server how many people must connect so that it displays the mission selection screen.
voteThreshold = 0.5;						// Percentage of votes needed to confirm a vote.
allowedVoteCmds[] = {};						// If not a single command is allowed, voting is disabled.
allowedVotedAdminCmds[] = {};				// If not a single command is allowed, no commands are enabled for voted-in admin.
votingTimeOut = 60;							// Voting timeout.


// MISSIONS CYCLE
forcedDifficulty = "Custom";				// If mission cycle is in the server.cfg, the difficulty set there overrides the difficulty set by this parameter.
autoSelectMission = true; 					// When enabled, the server auto-starts next mission in mission cycle and waits for players in the role selection.
randomMissionOrder = false;					// Randomly iterate through Missions list

class Missions
{
	class Arma3
	{
		template = "kp_liberation.Altis";	// The entry naming is always missionName.terrainName.
		difficulty = "Custom";				// The difficulty set here overrides the difficulty set by "forcedDifficulty".
	};										// When difficulty is set to "Custom"; the server will look into USERNAME.Arma3Profile file for the difficulty.
};
missionWhitelist[] = {};					// An empty whitelist means there is no restriction on what missions' available.
